version: "2.1"

##################
### DISCLAIMER ###
##################
# Services ports are exposed to the host machine in order to quickly inspect what's going on.
# There's a '1' digit prepended to all standard ports: this hopefully will prevent port conflicts.
# In production environments ports should not be exposed (they're accessed within Docker networks).

##############################
### default configurations ###
##############################
x-logging: &logging
  driver: json-file
  options:
    max-size: 5m
x-restart: &restart-policy on-failure

##########################
### segmented networks ###
##########################
networks:
  # network for users 'timelines' services
  api_timelines:
  db_timelines:
  # network for users 'followers' services
  api_followers:
  db_followers:

###############################
### docker-compose services ###
###############################
services:
  # timelines api service
  nodered:
    image: mamosk/nodered-kata:1.0.0
    container_name: ${KATA}_nodered
    restart: *restart-policy
    build:
      context: ./nodered
    env_file: .env
    depends_on:
      - influxdb
    logging: *logging
    volumes:
      - ./nodered/flows:/kata/flows
    networks:
      - api_timelines
      - db_timelines
    ports:
      - 11881:1881

  # timelines db service
  influxdb:
    image: influxdb:1.8
    container_name: ${KATA}_influxdb
    restart: *restart-policy
    environment:
      - INFLUXDB_DB=kata
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    logging: *logging
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - db_timelines
    ports:
      - 18086:8086

  # timeline db admin service
  chronograf:
    image: chronograf:1.8
    container_name: ${KATA}_chronograf
    restart: *restart-policy
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
    depends_on:
      - influxdb
    logging: *logging
    volumes:
      - chronograf_data:/var/lib/chronograf
    networks:
      - db_timelines
    ports:
      - 127.0.0.1:18888:8888

  # followers api service
  java:
    image: mamosk/java-kata:1.0.0
    container_name: ${KATA}_java
    restart: *restart-policy
    build:
      context: ./java
    env_file: .env
    environment:
      - JAVA_OPTS=-Xms32m -Xmx128m
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/kata
    depends_on:
      - postgres
    logging: *logging
    volumes:
      - ./java/src/main/resources/application.yml:/kata/config/application.yml:ro
    networks:
      - api_followers
      - db_followers
    ports:
      - 18080:8080

  # followers db service
  postgres:
    image: postgres:13
    container_name: ${KATA}_postgres
    restart: *restart-policy
    environment:
      - POSTGRES_DB=kata
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging: *logging
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - db_followers
    ports:
      - 15432:5432

  # followers db admin service
  pgadmin:
    image: dpage/pgadmin4:4
    container_name: ${KATA}_pgadmin
    restart: *restart-policy
    environment:
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_USERNAME}
    logging: *logging
    volumes:
      - pgadmin_data:/root/.pgadmin
      - ./postgres/servers.json:/pgadmin4/servers.json:ro
    networks:
      - db_followers
    ports:
      - 15050:80

########################################
### docker-managed persisted volumes ###
########################################
volumes:
  # volumes for users 'timelines' services
  influxdb_data:
  chronograf_data:
  # volumes for users 'followers' services
  postgres_data:
  pgadmin_data:
